     1                                  section .data
     2 00000000 48656C6C6F20576F72-         message1 db "Hello World !",10,0
     2 00000009 6C6420210A00       
     3 0000000F 456E74657220796F75-         message2 db "Enter your Text: ",0
     3 00000018 7220546578743A2000 
     4 00000021 596F75722054657874-         message3 db "Your Text: ",0
     4 0000002A 3A2000             
     5 0000002D 0A00000000000000            newline  dq 0xa
     6                                      inputLen equ 10
     7                                  
     8                                  section .bss
     9 00000000 <res Bh>                    input    resb inputLen+1
    10                                  section .text
    11                                      global main
    12                                  
    13                                  main:
    14 00000000 55                          push rbp
    15 00000001 4889E5                      mov rbp,    rsp
    16                                  
    17 00000004 48BF-                       mov rdi,    message1
    17 00000006 [0000000000000000] 
    18 0000000E E852000000                  call prints
    19                                      
    20 00000013 48BF-                       mov rdi,    message2
    20 00000015 [0F00000000000000] 
    21 0000001D E843000000                  call prints
    22 00000022 48BF-                       mov rdi,    input
    22 00000024 [0000000000000000] 
    23 0000002C BE0A000000                  mov rsi,    inputLen
    24 00000031 E865000000                  call reads
    25                                  
    26 00000036 48BF-                       mov rdi,    message3
    26 00000038 [2100000000000000] 
    27 00000040 E820000000                  call prints
    28 00000045 48BF-                       mov rdi,    input
    28 00000047 [0000000000000000] 
    29 0000004F E811000000                  call prints
    30 00000054 48BF-                       mov rdi,    newline
    30 00000056 [2D00000000000000] 
    31 0000005E E802000000                  call prints
    32                                      
    33 00000063 C9                          leave 
    34 00000064 C3                          ret
    35                                  prints:
    36 00000065 55                          push rbp
    37 00000066 4889E5                      mov rbp,    rsp
    38 00000069 4154                        push r12    ;callee saved register
    39 0000006B 4989FC                      mov r12,    rdi
    40 0000006E BA00000000                  mov rdx,    0; counter for the string
    41                                      .lengthloop:
    42 00000073 41803C2400                  cmp byte[r12],0
    43 00000078 7408                        je .lengthfound
    44 0000007A 49FFC4                      inc r12
    45 0000007D 48FFC2                      inc rdx
    46 00000080 EBF1                        jmp .lengthloop
    47                                      .lengthfound:
    48 00000082 4883FA00                    cmp rdx,    0
    49 00000086 740F                        je .done
    50 00000088 4889FE                      mov rsi,    rdi
    51 0000008B B801000000                  mov rax,    1
    52 00000090 BF01000000                  mov rdi,    1
    53 00000095 0F05                        syscall
    54                                      .done:
    55 00000097 415C                        pop r12
    56 00000099 C9                          leave
    57 0000009A C3                          ret
    58                                  
    59                                  reads:
    60                                      section .data
    61                                      section .bss
    62 0000000B ??                          .inputchar resb 1
    63                                  
    64                                      section .text
    65 0000009B 55                          push rbp
    66 0000009C 4889E5                      mov rbp,    rsp
    67 0000009F 4154                        push r12
    68 000000A1 4156                        push r14;   counter of characters
    69 000000A3 4155                        push r13;   length of input buffer
    70                                  
    71 000000A5 4989FC                      mov r12,    rdi
    72 000000A8 4989F5                      mov r13,    rsi
    73 000000AB 4D31F6                      xor r14,    r14
    74                                  
    75                                      .readchar:
    76 000000AE B800000000                  mov rax,    0
    77 000000B3 BF00000000                  mov rdi,    0         ;syscall for input
    78 000000B8 488D3425[0B000000]          lea rsi,    [.inputchar]; effective address of the input buffer
    79 000000C0 BA01000000                  mov rdx,    1;  no. of characters to take for input
    80 000000C5 0F05                        syscall
    81 000000C7 8A0425[0B000000]            mov al,     [.inputchar]
    82 000000CE 3A0425[2D000000]            cmp al, byte[newline]
    83 000000D5 7419                        je .done
    84                                  
    85 000000D7 3C61                        cmp al,     97  ;ascii value of the 'a'
    86 000000D9 7CD3                        jl .readchar
    87 000000DB 3C7A                        cmp al,     122
    88 000000DD 7FCF                        jg .readchar
    89                                  
    90                                      ;increase counter and checks
    91 000000DF 49FFC6                      inc r14
    92 000000E2 4D39EE                      cmp r14,    r13
    93 000000E5 77C7                        ja .readchar;reads the input but ignored and loop will end only if the input is newline
    94                                  
    95 000000E7 41880424                    mov byte[r12],  al
    96 000000EB 49FFC4                      inc r12
    97 000000EE EBBE                        jmp .readchar
    98                                      .done: 
    99 000000F0 49FFC4                      inc r12
   100 000000F3 41C6042400                  mov byte[r12],  0;NULL terminator to the string
   101 000000F8 4C89E6                      mov rsi,    r12
   102 000000FB 415C                        pop r12
   103 000000FD 415D                        pop r13
   104 000000FF 415E                        pop r14
   105 00000101 C9                          leave
   106 00000102 C3                          ret
