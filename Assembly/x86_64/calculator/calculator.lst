     1                                  extern printf
     2                                  
     3                                  section .data
     4 00000000 9001000000000000            number1 dq 400
     5 00000008 0300000000000000            number2 dq 3
     6 00000010 F4FFFFFFFFFFFFFF            neg_number dq -12
     7                                      
     8 00000018 546865206E756D6265-         fmt db "The numbers are %ld and %ld ",10,0
     8 00000021 72732061726520256C-
     8 0000002A 6420616E6420256C64-
     8 00000033 200A00             
     9 00000036 257320256C640A00            fmtint db "%s %ld",10,0
    10 0000003E 5468652073756D2069-         sumi db "The sum is ",0
    10 00000047 732000             
    11 0000004A 546865206469666665-         difi db "The difference ",0
    11 00000053 72656E63652000     
    12 0000005A 4E756D626572312069-         inci db "Number1 incremented ",0
    12 00000063 6E6372656D656E7465-
    12 0000006C 642000             
    13 0000006F 4E756D626572312064-         deci db "Number1 decremented ",0
    13 00000078 656372656D656E7465-
    13 00000081 642000             
    14 00000084 4E756D626572312073-         sali db "Number1 shifted left 2 (*4): ",0
    14 0000008D 686966746564206C65-
    14 00000096 6674203220282A3429-
    14 0000009F 3A2000             
    15 000000A2 4E756D626572312073-         sari db "Number1 shifted right 2 (/4): ",0
    15 000000AB 686966746564207269-
    15 000000B4 676874203220282F34-
    15 000000BD 293A2000           
    16 000000C1 4E756D626572312073-         sariex db "Number1 shift right 2 (/4) wiht sign expression :",0
    16 000000CA 686966742072696768-
    16 000000D3 74203220282F342920-
    16 000000DC 77696874207369676E-
    16 000000E5 206578707265737369-
    16 000000EE 6F6E203A00         
    17 000000F3 5468652070726F6475-         multi db "The product is ",0
    17 000000FC 63742069732000     
    18 00000103 54686520696E746567-         divi db "The integer quotient is ",0
    18 0000010C 65722071756F746965-
    18 00000115 6E742069732000     
    19 0000011C 546865206D6F64756C-         remi db "The modulo is ",0
    19 00000125 6F2069732000       
    20                                  
    21                                  section .bss
    22 00000000 ????????????????            resulti resq 1
    23 00000008 ????????????????            modulo resq 1
    24                                      
    25                                  section .text 
    26                                      global main
    27                                  main:
    28 00000000 55                          push rbp
    29 00000001 4889E5                      mov rbp, rsp
    30                                      
    31                                      ;display the numbers
    32 00000004 48BF-                       mov rdi ,fmt
    32 00000006 [1800000000000000] 
    33 0000000E 488B3425[00000000]          mov rsi, [number1]
    34 00000016 488B1425[08000000]          mov rdx, [number2]
    35 0000001E B800000000                  mov rax, 0
    36 00000023 E8(00000000)                call printf
    37                                      
    38                                      ;addition
    39 00000028 488B0425[00000000]          mov rax, [number1]
    40 00000030 48030425[08000000]          add rax,[number2]
    41 00000038 48890425[00000000]          mov [resulti], rax
    42                                      
    43                                      ;display result of addition
    44 00000040 48BF-                       mov rdi, fmtint
    44 00000042 [3600000000000000] 
    45 0000004A 48BE-                       mov rsi, sumi
    45 0000004C [3E00000000000000] 
    46 00000054 488B1425[00000000]          mov rdx, [resulti]
    47 0000005C B800000000                  mov rax, 0
    48 00000061 E8(00000000)                call printf
    49                                      
    50                                      ;subtraction
    51 00000066 488B0425[00000000]          mov rax, [number1]
    52 0000006E 482B0425[08000000]          sub rax,[number2]
    53 00000076 48890425[00000000]          mov [resulti], rax
    54                                      
    55                                      ;display result of deletion
    56 0000007E 48BF-                       mov rdi, fmtint
    56 00000080 [3600000000000000] 
    57 00000088 48BE-                       mov rsi, difi
    57 0000008A [4A00000000000000] 
    58 00000092 488B1425[00000000]          mov rdx, [resulti]
    59 0000009A B800000000                  mov rax, 0
    60 0000009F E8(00000000)                call printf
    61                                      
    62                                      ;incrementing number 1
    63 000000A4 488B0425[00000000]          mov rax, [number1]
    64 000000AC 48FFC0                      inc rax
    65 000000AF 48890425[00000000]          mov [resulti], rax
    66                                      
    67                                      ;incrementing: displays the result here
    68 000000B7 48BF-                       mov rdi, fmtint
    68 000000B9 [3600000000000000] 
    69 000000C1 48BE-                       mov rsi, inci
    69 000000C3 [5A00000000000000] 
    70 000000CB 488B1425[00000000]          mov rdx, [resulti]
    71 000000D3 B800000000                  mov rax, 0
    72 000000D8 E8(00000000)                call printf
    73                                      
    74                                      ;decrementing
    75 000000DD 488B0425[00000000]          mov rax, [number1]
    76 000000E5 48FFC8                      dec rax
    77 000000E8 48890425[00000000]          mov [resulti], rax
    78                                      
    79                                      ;decrementation: displays the result here
    80 000000F0 48BF-                       mov rdi, fmtint
    80 000000F2 [3600000000000000] 
    81 000000FA 48BE-                       mov rsi, deci
    81 000000FC [6F00000000000000] 
    82 00000104 488B1425[00000000]          mov rdx, [resulti]
    83 0000010C B800000000                  mov rax, 0
    84 00000111 E8(00000000)                call printf
    85                                      
    86                                      ;shift left
    87 00000116 488B0425[00000000]          mov rax, [number1]
    88 0000011E 48C1E002                    sal rax, 2          ;shit left bitwise the contents of the accumulator
    89 00000122 48890425[00000000]          mov [resulti], rax
    90                                      
    91                                      ;display
    92 0000012A 48BF-                       mov rdi, fmtint
    92 0000012C [3600000000000000] 
    93 00000134 48BE-                       mov rsi, sali
    93 00000136 [8400000000000000] 
    94 0000013E 488B1425[00000000]          mov rdx, [resulti]
    95 00000146 B800000000                  mov rax, 0
    96 0000014B E8(00000000)                call printf
    97                                      
    98                                      ;shift left
    99 00000150 488B0425[00000000]          mov rax, [number1]
   100 00000158 48C1F802                    sar rax, 2          ;shit right bitwise (two times ) the contents of the accumulator
   101 0000015C 48890425[00000000]          mov [resulti], rax
   102                                      
   103                                      ;display
   104 00000164 48BF-                       mov rdi, fmtint
   104 00000166 [3600000000000000] 
   105 0000016E 48BE-                       mov rsi, sari
   105 00000170 [A200000000000000] 
   106 00000178 488B1425[00000000]          mov rdx, [resulti]
   107 00000180 B800000000                  mov rax, 0
   108 00000185 E8(00000000)                call printf
   109                                      
   110                                      ;shift right sign extension
   111 0000018A 488B0425[10000000]          mov rax, [neg_number]
   112 00000192 48C1F802                    sar rax, 2
   113 00000196 48890425[00000000]          mov [resulti], rax
   114                                      
   115                                      ;display the result
   116 0000019E 48BF-                       mov rdi, fmtint
   116 000001A0 [3600000000000000] 
   117 000001A8 48BE-                       mov rsi, sariex
   117 000001AA [C100000000000000] 
   118 000001B2 488B1425[00000000]          mov rdx, [resulti]
   119 000001BA B800000000                  mov rax, 0
   120 000001BF E8(00000000)                call printf
   121                                      
   122                                      ;multiplication 
   123 000001C4 488B0425[00000000]          mov rax, [number1]
   124 000001CC 48F72C25[08000000]          imul qword[number2]
   125 000001D4 48890425[00000000]          mov [resulti ], rax
   126                                      
   127                                      ;display 
   128 000001DC 48BF-                       mov rdi, fmtint
   128 000001DE [3600000000000000] 
   129 000001E6 48BE-                       mov rsi, multi
   129 000001E8 [F300000000000000] 
   130 000001F0 488B1425[00000000]          mov rdx, [resulti]
   131 000001F8 B800000000                  mov rax, 0
   132 000001FD E8(00000000)                call printf
   133                                      
   134                                      ;division
   135 00000202 488B0425[00000000]          mov rax, [number1]
   136 0000020A BA00000000                  mov rdx, 0          ;the register to store the result in division operation
   137 0000020F 48F73C25[08000000]          idiv qword[number2]
   138 00000217 48890425[00000000]          mov [resulti], rax
   139 0000021F 48891425[08000000]          mov [modulo], rdx
   140                                      
   141                                      ;displaying the quotient
   142 00000227 48BF-                       mov rdi, fmtint
   142 00000229 [3600000000000000] 
   143 00000231 48BE-                       mov rsi, divi
   143 00000233 [0301000000000000] 
   144 0000023B 488B1425[00000000]          mov rdx, [resulti]
   145 00000243 B800000000                  mov rax, 0
   146 00000248 E8(00000000)                call printf
   147                                      
   148                                      ;displaying the remainder
   149 0000024D 48BF-                       mov rdi, fmtint
   149 0000024F [3600000000000000] 
   150 00000257 48BE-                       mov rsi, remi
   150 00000259 [1C01000000000000] 
   151 00000261 488B1425[00000000]          mov rdx, [resulti]
   152 00000269 B800000000                  mov rax, 0
   153 0000026E E8(00000000)                call printf
   154                                      
   155 00000273 4889EC                      mov rsp,rbp
   156 00000276 5D                          pop rbp
   157 00000277 C3                          ret
