import pefile, hashlib, re, sys

def funToCalcHash(filename: str) -> str:
    with open(filename, "rb") as file:
        fileStr = file.read()
        hash = hashlib.sha256(fileStr)
    return hash.hexdigest()

def findPrintableStrings(filename: str) -> list[str]:
    with open(filename, "rb") as file:
        content = file.read()
        strings = re.findall(b"[\\x20-\\x7E]{4,}", content)
        return [s.decode("utf-8") for s in strings]
    
def analyzePEFile(pefilename: str):
    try:
        pe = pefile.PE(pefilename)
        return True, pe.dump_info()
    except pefile.PEFormatError: return False, "Not A valid PE File! "

if __name__ == "__main__":
    filename = sys.argv[1]
    print("Analysing the file: ", filename)
    hash = funToCalcHash(filename)  
    strings = findPrintableStrings(filename)
    print("SHA-256 Hash: ", hash)
    print("First 5 string of the %s: \n%s" % (filename, strings[: 5]))
    print("Analyzing now the PE file: ", filename)
    is_pe, pe_dump = analyzePEFile(filename)
    if is_pe: print(pe_dump)
    else: print(pe_dump)